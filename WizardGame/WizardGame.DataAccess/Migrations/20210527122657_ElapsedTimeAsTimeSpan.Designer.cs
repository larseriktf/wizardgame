// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WizardGame.DataAccess;

namespace WizardGame.DataAccess.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20210527122657_ElapsedTimeAsTimeSpan")]
    partial class ElapsedTimeAsTimeSpan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WizardGame.Model.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Action2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Action3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Action4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interact1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interact2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interact3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveDown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavContinue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavPause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action1 = "LEFTARROW",
                            Action2 = "UPARROW",
                            Action3 = "RIGHTARROW",
                            Action4 = "DOWNARROW",
                            ConfigurationName = "Default Configuration",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "S",
                            MoveLeft = "A",
                            MoveRight = "D",
                            MoveUp = "W",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        },
                        new
                        {
                            Id = 2,
                            Action1 = "A",
                            Action2 = "W",
                            Action3 = "D",
                            Action4 = "S",
                            ConfigurationName = "Switch",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "UPARROW",
                            MoveLeft = "LEFTARROW",
                            MoveRight = "RIGHTARROW",
                            MoveUp = "DOWNARROW",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        },
                        new
                        {
                            Id = 3,
                            Action1 = "LEFTARROW",
                            Action2 = "UPARROW",
                            Action3 = "RIGHTARROW",
                            Action4 = "DOWNARROW",
                            ConfigurationName = "Windowed Borderless",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "S",
                            MoveLeft = "A",
                            MoveRight = "D",
                            MoveUp = "W",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        },
                        new
                        {
                            Id = 4,
                            Action1 = "LEFTARROW",
                            Action2 = "UPARROW",
                            Action3 = "RIGHTARROW",
                            Action4 = "DOWNARROW",
                            ConfigurationName = "Fullscreen",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "S",
                            MoveLeft = "A",
                            MoveRight = "D",
                            MoveUp = "W",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        },
                        new
                        {
                            Id = 5,
                            Action1 = "NUMLEFT",
                            Action2 = "NUMUP",
                            Action3 = "NUMRIGHT",
                            Action4 = "NUMDOWN",
                            ConfigurationName = "NumPad",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "S",
                            MoveLeft = "A",
                            MoveRight = "D",
                            MoveUp = "W",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        },
                        new
                        {
                            Id = 6,
                            Action1 = "N",
                            Action2 = "J",
                            Action3 = "K",
                            Action4 = "M",
                            ConfigurationName = "Close Together",
                            Interact1 = "R",
                            Interact2 = "F",
                            Interact3 = "C",
                            MoveDown = "S",
                            MoveLeft = "A",
                            MoveRight = "D",
                            MoveUp = "W",
                            NavBack = "BACKSPACE",
                            NavContinue = "ENTER",
                            NavPause = "ESCAPE"
                        });
                });

            modelBuilder.Entity("WizardGame.Model.GameStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("ElapsedTime")
                        .HasColumnType("time");

                    b.Property<int>("EnemiesDefeated")
                        .HasColumnType("int");

                    b.Property<int>("PlayerProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WavesPlayed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerProfileId");

                    b.ToTable("GameStatistics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 1,
                            WavesPlayed = 1
                        },
                        new
                        {
                            Id = 2,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 1,
                            WavesPlayed = 14
                        },
                        new
                        {
                            Id = 3,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 1,
                            WavesPlayed = 29
                        },
                        new
                        {
                            Id = 4,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 1,
                            WavesPlayed = 5
                        },
                        new
                        {
                            Id = 5,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 1,
                            WavesPlayed = 15
                        },
                        new
                        {
                            Id = 6,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 2,
                            WavesPlayed = 2
                        },
                        new
                        {
                            Id = 7,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 2,
                            WavesPlayed = 40
                        },
                        new
                        {
                            Id = 8,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 2,
                            WavesPlayed = 28
                        },
                        new
                        {
                            Id = 9,
                            ElapsedTime = new TimeSpan(0, 0, 0, 0, 0),
                            EnemiesDefeated = 0,
                            PlayerProfileId = 2,
                            WavesPlayed = 10
                        });
                });

            modelBuilder.Entity("WizardGame.Model.PlayerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlayerProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSelected = false,
                            PlayerName = "Åge"
                        },
                        new
                        {
                            Id = 2,
                            IsSelected = false,
                            PlayerName = "Patrenko Escobar"
                        },
                        new
                        {
                            Id = 3,
                            IsSelected = false,
                            PlayerName = "Player3"
                        });
                });

            modelBuilder.Entity("WizardGame.Model.GameStatistic", b =>
                {
                    b.HasOne("WizardGame.Model.PlayerProfile", "PlayerProfile")
                        .WithMany("GameStatistics")
                        .HasForeignKey("PlayerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
